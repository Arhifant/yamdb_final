# Generated by Django 2.2.16 on 2022-11-09 18:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import reviews.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name', max_length=256, verbose_name='name')),
                ('slug', models.SlugField(help_text='Category slug', unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Text of comment', verbose_name='text')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Date of comment publication', verbose_name='pub_date')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Genre name', max_length=256, verbose_name='genre')),
                ('slug', models.SlugField(help_text='Genre slug', unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text="Review's text", verbose_name='text')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Publication date', verbose_name='pub_date')),
                ('score', models.IntegerField(help_text="Review's title score", validators=[django.core.validators.MinValueValidator(1, 'Score can not be less than one.'), django.core.validators.MaxValueValidator(10, 'Score can not be more than ten.')], verbose_name='score')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title name', max_length=256, verbose_name='name')),
                ('year', models.PositiveSmallIntegerField(help_text='Title publish year', validators=[reviews.validators.validate_title_year], verbose_name='year')),
                ('description', models.TextField(blank=True, help_text='Title description', null=True, verbose_name='description')),
                ('category', models.ForeignKey(help_text='Title category', on_delete=django.db.models.deletion.PROTECT, to='reviews.Category', verbose_name='category')),
                ('genre', models.ManyToManyField(help_text='Title genre set', to='reviews.Genre', verbose_name='genre')),
            ],
            options={
                'verbose_name': 'Произведение',
                'verbose_name_plural': 'Произведения',
                'ordering': ('-id',),
            },
        ),
    ]
